name: Deploy React and Node.js to AWS (aaPanel)

on:
  push:
    branches:
      - main  # Runs deployment only when changes are pushed to 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🛎 Checkout Repository
      uses: actions/checkout@v3

    - name: 🔐 Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AWS_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "${{ secrets.AWS_HOST }}" >> ~/.ssh/known_hosts

    - name: 🛠 Install Dependencies & Build Frontend
      run: |
        # Set CI=false to avoid warnings being treated as errors
        export CI=false

        # Navigate to the web frontend directory
        cd code/web-frontend
        
        # Install all necessary dependencies
        npm install
        
        # Optionally install missing Babel plugin
        npm install --save-dev @babel/plugin-proposal-private-property-in-object
        
        # Run the build script to generate the production build
        npm run build
        
        # Check if the build directory exists and display its contents (for debugging)
        if [ -d "build" ]; then
          echo "Build directory exists."
          ls -la build  # List the contents of the build directory
        else
          echo "Build directory does not exist."
          exit 1  # Exit with error code to fail the job if build directory is missing
        fi

    - name: 🚀 Deploy Frontend to AWS (aaPanel)
      run: |
        if [ -d "./code/web-frontend/build/" ]; then
          echo "✅ Found 'build/' directory. Deploying frontend..."
          scp -r ./code/web-frontend/build/* root@${{ secrets.AWS_HOST }}:/www/wwwroot/vescueye.work.gd
        else
          echo "❌ 'build/' directory not found! Exiting..."
          exit 1
        fi

    - name: 🛠 Install Dependencies & Setup Backend
      run: |
        cd code/backend
        npm install
        ls -la  # Debugging: List backend files

    - name: 🚀 Deploy Backend to AWS (aaPanel)
      run: |
        ssh root@${{ secrets.AWS_HOST }} << 'EOF'
          # Navigate to backend location
          cd /www/wwwroot/vescueye.work.gd/code/backend
          
          # Debugging: List files in the backend directory
          ls -la
          
          # Install dependencies and restart backend with PM2
          pm2 restart vescueye-backend || (npm install && pm2 start server.js --name vescueye-backend)
          
          # Save PM2 process & ensure it restarts on reboot
          pm2 save
          pm2 startup
        EOF

    - name: 🔄 Restart Web Server (Apache or Nginx)
      run: |
        ssh root@${{ secrets.AWS_HOST }} "sudo systemctl restart apache2 || sudo systemctl restart nginx"
