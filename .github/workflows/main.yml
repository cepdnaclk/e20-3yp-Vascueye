name: Deploy React and Node.js to AWS (aaPanel)

on:
  push:
    branches:
      - main #   Runs deployment only when changes are pushed to 'main' branch
      #test

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üõé Checkout Repository
        uses: actions/checkout@v3

      - name: üîê Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.AWS_HOST }}" >> ~/.ssh/known_hosts

      - name: üåç Create .env from GitHub Secrets
        run: |
          cd code/web-frontend
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" > .env

      - name: üõ† Install Dependencies & Build Frontend
        run: |
          # Set CI=false to avoid warnings being treated as errors
          export CI=false

          # Navigate to the web frontend directory
          cd code/web-frontend

          # Install all necessary dependencies
          npm install

          # Optionally install missing Babel plugin
          npm install --save-dev @babel/plugin-proposal-private-property-in-object

          # Run the build script to generate the production build
          npm run build

          # Check if the build directory exists and display its contents (for debugging)
          if [ -d "build" ]; then
            echo "Build directory exists."
            ls -la build  # List the contents of the build directory
          else
            echo "Build directory does not exist."
            exit 1  # Exit with error code to fail the job if build directory is missing
          fi

      - name: üöÄ Deploy Frontend to AWS (aaPanel)
        run: |
          if [ -d "./code/web-frontend/build/" ]; then
            echo "‚úÖ Found 'build/' directory. Deploying frontend..."
            scp -r ./code/web-frontend/build/* root@${{ secrets.AWS_HOST }}:/www/wwwroot/vescueye.work.gd
          else
            echo "‚ùå 'build/' directory not found! Exiting..."
            exit 1
          fi

      
      - name: ‚úÖ Verify Frontend
        run: |
          echo "Testing application health..."
          curl -s "https://${{ secrets.AWS_HOST }}" | grep -q "Vascueye" && echo "‚úÖ Frontend OK" || echo "‚ùå Frontend Error"
